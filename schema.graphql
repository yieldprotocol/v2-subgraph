# we have to add "Entity" since Series can't be pluralized
type SeriesEntity @entity {
  id: ID!
  baseAsset: Asset!
  fyToken: FYToken!
  maturity: Int!
}

type Asset @entity {
  id: ID!
  address: Bytes!
  name: String!
  symbol: String!
  decimals: Int!

  fyTokens: [FYToken!]! @derivedFrom(field: "underlyingAsset")

  totalCollateral: BigDecimal!
  totalDebt: BigDecimal!
  totalTradingVolume: BigDecimal!
  totalInPools: BigDecimal!
}

type Collateral @entity {
  id: ID!
  asset: Asset!
  series: SeriesEntity!
}

type Vault @entity {
  id: ID!
  owner: Bytes!
  series: SeriesEntity!
  collateral: Collateral!

  debtAmount: BigDecimal!
  collateralAmount: BigDecimal!
}

type FYToken @entity {
  id: ID!
  name: String!
  symbol: String!
  underlyingAddress: Bytes!
  underlyingAsset: Asset
  maturity: Int!
  decimals: Int!
  totalSupply: BigDecimal!
  pools: [Pool!]! @derivedFrom(field: "fyToken")

  totalInPools: BigDecimal!
}

type Pool @entity {
  id: ID!
  base: Bytes!
  fyToken: FYToken!

  fyTokenReserves: BigDecimal!
  fyTokenVirtualReserves: BigDecimal!
  baseReserves: BigDecimal!
  apr: BigDecimal!
  currentFYTokenPriceInBase: BigDecimal!

  poolTokens: BigDecimal!

  totalVolumeInBase: BigDecimal!
  totalTradingFeesInBase: BigDecimal!

  tvlInBase: BigDecimal!

  invariant: BigDecimal!
}

# Events

type Trade @entity {
  id: ID!
  timestamp: BigInt!
  pool: Pool!
  from: Bytes!
  to: Bytes!

  amountBaseToken: BigDecimal!
  amountFYToken: BigDecimal!

  feeInBase: BigDecimal!
}
